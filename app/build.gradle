apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "qingguoguo.com.mvpdemo"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:design:26.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}

//apply from: "${rootDir}/codequalityconfig/pmd/pmd.gradle"
//apply from: "${rootDir}/codequalityconfig/quality.gradle"
apply plugin: 'findbugs'

//task findbugs(type: FindBugs,dependsOn:'compileDebugSources') {
//    ignoreFailures = true
//    effort = "default"
//    reportLevel = "high"
//    println("$project.buildDir")
//    classes = files("$project.buildDir/intermediates/classes")
//    //print("$project.buildDir********")
//    source = fileTree("src/main/java/")
//    classpath = files()
//    reports {
//        xml.enabled = false
//        html.enabled = true
//        xml {
//            destination "$project.buildDir/findbugs.xml"
//        }
//        html {
//            destination "$project.buildDir/findbugs.html"
//        }
//    }
//}

findbugs {
    // https://github.com/ribot/ribot-app-android/issues/17
    // https://chaichuanfa.github.io/2018/01/09/quality/
    // https://segmentfault.com/a/1190000015373074
    // https://developer.android.com/studio/build/#build-process
    //工具版本
    toolVersion = "3.0.1"
    //忽略失败，如果检测到bug，task会执行失败，这里设置true会让task继续执行
    ignoreFailures = false
    //分析等级：min  default   max
    effort = "max"
    //检测bug的等级：low   medium  high，等级越高检测越严格
    reportLevel = "high"
    //exclude Filter路径
    excludeFilter file("${project.rootDir}/codequalityconfig/findbugs/findbugs-filter.xml")
}
task findbugs(type: FindBugs, group: 'verification') {
    description 'Run findbugs'
    //检测二进制文件路径
    classes = files("${project.rootDir}/${project.getName()}/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes")
    source 'src'
    //匹配检测的文件名
    include '**/*.java'
    exclude '**/gen/**'
    reports {
        xml.enabled = false
        html.enabled = true
        //配置检查报告输出路径
        xml {
            destination "${project.rootDir}/${project.getName()}/build/reports/findbugs/findbugs.xml"
        }
        html {
            destination "${project.rootDir}/${project.getName()}/build/reports/findbugs/findbugs.html"
        }
    }
    classpath = files()
}


