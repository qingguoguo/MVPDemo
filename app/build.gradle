apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "qingguoguo.com.mvpdemo"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:design:26.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}

//apply from: "${rootDir}/codequalityconfig/pmd/pmd.gradle"
//apply from: "${rootDir}/codequalityconfig/quality.gradle"
apply plugin: 'findbugs'

//task findbugs(type: FindBugs,dependsOn:'assembleDebug') {
//    ignoreFailures= true
//    effort= "default"
//    reportLevel= "high"
//    println( "$project.buildDir")
//    classes = files("$project.buildDir/intermediates/classes")
//    source= fileTree("src/main/java/")
//    classpath= files()
//    reports{
//        xml.enabled=false
//        html.enabled=true
//        xml {
//            destination "$project.buildDir/findbugs.xml"
//        }
//        html{
//            destination "$project.buildDir/findbugs.html"
//        }
//    }
//}

task findbugs(type: FindBugs) {
    ignoreFailures = true
    excludeFilter = new File("${project.rootDir}/codequalityconfig/findbugs/findbugs-filter.xml")
    effort = "max"
    reportLevel = "high"
    classes = files("$project.buildDir/intermediates/classes")

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = false
        html.enabled = true
        xml {
            destination "$project.buildDir/reports/findbugs/findbugs.xml"
            xml.withMessages true
        }
        html {
            destination "$project.buildDir/reports/findbugs/findbugs.html"
        }
    }
    classpath = files()
}

